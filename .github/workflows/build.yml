name: build

on:
  push:
    branches:
      - '*'

jobs:
  test_and_build:
    strategy:
      fail-fast: false
      matrix:
        version:
          - 1.41.0
          - stable
          - nightly
    name: ${{ matrix.version }}
    runs-on: ubuntu-latest
    services:
      fluentd:
        image: redis:alpine
        ports:
          - 6379:6379
    steps:
      - uses: actions/checkout@master
      - name: install ${{ matrix.version }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.version }}-x86_64-unknown-linux-gnu
          components: rustfmt, clippy
          override: true
      - name: install sccache
        env:
          LINK: https://github.com/mozilla/sccache/releases/download
          SCCACHE_VERSION: 0.2.13
        run: |
          curl -L "$LINK/$SCCACHE_VERSION/sccache-$SCCACHE_VERSION-x86_64-unknown-linux-musl.tar.gz" | tar xz
          echo "::add-path::$PWD/sccache-$SCCACHE_VERSION-x86_64-unknown-linux-musl/"
      - name: start sccache
        env:
          SCCACHE_REDIS: redis://localhost:6379
        run: sccache --start-server
      - name: cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --color=always --check
      - name: cargo clippy
        uses: actions-rs/cargo@v1
        env:
          RUSTC_WRAPPER: sccache
        with:
          command: clippy
          args: --workspace -- -D warnings
      - name: tests
        uses: actions-rs/cargo@v1
        env:
          RUSTC_WRAPPER: sccache
        timeout-minutes: 20
        with:
          command: test
          args: --workspace --no-fail-fast -- --nocapture
      - name: builds
        uses: actions-rs/cargo@v1
        env:
          RUSTC_WRAPPER: sccache
        timeout-minutes: 5
        with:
          command: build
          args: --workspace --verbose
      - name: stop sccache
        run: sccache --stop-server
